{"ast":null,"code":"import { getCurrentState, ratio } from './state.js';\nconst MAP_SIZE = 3000;\nlet canvas;\nlet context;\nlet clientOffX;\nlet clientOffY;\nfunction setCanvasDimensions() {\n  const scaleRatio = Math.max(1, 800 / window.innerWidth);\n  canvas.width = scaleRatio * window.innerWidth;\n  canvas.height = scaleRatio * window.innerHeight;\n}\nlet animationFrameRequestId;\nfunction render() {\n  const {\n    me,\n    others,\n    lines,\n    remainders,\n    bots,\n    usernames\n  } = getCurrentState();\n  if (me) {\n    renderBackground(me.centroid.x, me.centroid.y);\n    // Draw boundaries\n    renderboundaries(me);\n    //draw leaderboard\n\n    renderPlayer(me);\n    others.forEach(other => renderPlayers(me, other));\n\n    //draw bots \n    bots.forEach(bot => renderBots(me, bot));\n    lines.forEach(line => renderLine(me, line));\n    remainders.forEach(remainder => rendeRemainder(me, remainder));\n    renderLeaderboard(usernames);\n  }\n  animationFrameRequestId = requestAnimationFrame(render);\n}\nfunction rendeRemainder(me, remainder) {\n  const canvasX = canvas.width / 2 - me.centroid.x;\n  const canvasY = canvas.height / 2 - me.centroid.y;\n\n  // Draw ship\n  context.save();\n  context.translate(canvasX, canvasY);\n  context.beginPath();\n  context.moveTo(remainder.coordinates[0].x, remainder.coordinates[0].y);\n  for (let i = 1; i < remainder.coordinates.length; i++) {\n    context.lineTo(remainder.coordinates[i].x, remainder.coordinates[i].y);\n  }\n  context.closePath();\n  context.strokeStyle = 'black';\n  context.lineWidth = 4;\n  context.stroke();\n  context.fillStyle = remainder.color;\n  context.fill();\n  context.restore();\n}\nfunction renderLine(me, line) {\n  const canvasX = canvas.width / 2 - me.centroid.x;\n  const canvasY = canvas.height / 2 - me.centroid.y;\n  context.save();\n  context.translate(canvasX, canvasY);\n  //context.rotate(line.angle)\n  context.beginPath();\n  context.moveTo(line.x1, line.y1);\n  context.lineTo(line.x2, line.y2);\n  context.closePath();\n  context.strokeStyle = line.color;\n  context.lineWidth = 2;\n  context.stroke();\n  context.restore();\n}\nfunction setClientdir() {}\nfunction renderPlayer(player) {\n  const canvasX = canvas.width / 2 - player.centroid.x + 2 * player.velocity.x;\n  const canvasY = canvas.height / 2 - player.centroid.y + 2 * player.velocity.y;\n\n  // Draw ship\n  context.save();\n  context.translate(canvasX, canvasY);\n  //context.beginPath();\n  //console.log('player', me.centroid)\n  //context.arc(0, 0, 40, 0, 2 * Math.PI);\n  //context.fillStyle = 'blue';\n  //context.fill();\n  //context.closePath();\n\n  context.beginPath();\n  context.shadowColor = player.color;\n  context.shadowBlur = 15;\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.moveTo(player.coordinates[0].x, player.coordinates[0].y);\n  for (let i = 1; i < player.coordinates.length; i++) {\n    context.lineTo(player.coordinates[i].x, player.coordinates[i].y);\n  }\n  context.closePath();\n  //\n  if (player.protected) {\n    context.shadowColor = 'hsla(183, 100%, 47%, 1)';\n    context.shadowBlur = 100;\n  }\n  context.strokeStyle = 'black';\n  ;\n  context.lineWidth = 4;\n  context.stroke();\n  context.fillStyle = player.color;\n  context.fill();\n\n  //for (let i = 0; i < player.coordinates.length; i++) {\n  //    context.font = \"20px serif\";\n  //    context.strokeStyle = 'black';\n  //    context.strokeText(`${i}`\n  //        , player.coordinates[i].x, player.coordinates[i].y);\n  //}\n\n  //context.beginPath();\n  //context.arc(player.centroid.x, player.centroid.y, player.radius, 0, 2 * Math.PI);\n  //context.strokeStyle = 'blue';\n  //context.lineWidth = 2;\n  //context.stroke();\n  //context.closePath();\n\n  context.restore();\n}\nfunction renderPlayers(me, player) {\n  const canvasX = canvas.width / 2 - me.centroid.x;\n  const canvasY = canvas.height / 2 - me.centroid.y;\n\n  // Draw ship\n  context.save();\n  context.translate(canvasX, canvasY);\n  context.beginPath();\n  context.shadowColor = player.color;\n  context.shadowBlur = 15;\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.moveTo(player.coordinates[0].x, player.coordinates[0].y);\n  for (let i = 1; i < player.coordinates.length; i++) {\n    context.lineTo(player.coordinates[i].x, player.coordinates[i].y);\n  }\n  context.closePath();\n  context.strokeStyle = 'black';\n  context.lineWidth = 4;\n  context.stroke();\n  context.fillStyle = player.color;\n  context.fill();\n\n  //draw username\n  drawUsername(player);\n\n  //for (let i = 0; i < player.coordinates.length; i++) {\n  //    context.font = \"20px serif\";\n  //    context.strokeStyle = 'black';\n  //    context.strokeText(`${i}`\n  //        , player.coordinates[i].x, player.coordinates[i].y);\n  //}\n\n  //context.beginPath();\n  //context.arc(player.centroid.x, player.centroid.y, player.radius, 0, 2 * Math.PI);\n  //context.strokeStyle = 'blue';\n  //context.lineWidth = 2;\n  //context.stroke();\n  //context.closePath();\n\n  context.restore();\n}\nfunction renderBots(me, bot) {\n  const canvasX = canvas.width / 2 - me.centroid.x;\n  const canvasY = canvas.height / 2 - me.centroid.y;\n\n  // Draw ship\n  context.save();\n  context.translate(canvasX, canvasY);\n  context.beginPath();\n  context.shadowColor = bot.color;\n  context.shadowBlur = 15;\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.moveTo(bot.coordinates[0].x, bot.coordinates[0].y);\n  for (let i = 1; i < bot.coordinates.length; i++) {\n    context.lineTo(bot.coordinates[i].x, bot.coordinates[i].y);\n  }\n  context.closePath();\n  context.strokeStyle = 'black';\n  context.lineWidth = 4;\n  context.stroke();\n  context.fillStyle = bot.color;\n  context.fill();\n  context.restore();\n}\n\n//-------------\n\nfunction renderboundaries(me) {\n  context.strokeStyle = 'black';\n  context.lineWidth = 2.50;\n  context.strokeRect(canvas.width / 2 - me.centroid.x, canvas.height / 2 - me.centroid.y, MAP_SIZE, MAP_SIZE);\n}\nfunction renderBackground(x, y) {\n  //const backgroundX = MAP_SIZE / 2 - x + canvas.width / 2;\n  //const backgroundY = MAP_SIZE / 2 - y + canvas.height / 2;\n  //const backgroundGradient = context.createRadialGradient(\n  //    backgroundX,\n  //    backgroundY,\n  //    MAP_SIZE / 10,\n  //    backgroundX,\n  //    backgroundY,\n  //    MAP_SIZE / 2,\n  //);\n  //backgroundGradient.addColorStop(0, '#f9f5ff');\n  //backgroundGradient.addColorStop(1, '#cda4de');\n  //context.fillStyle = backgroundGradient;\n  //context.fillRect(0, 0, canvas.width, canvas.height);\n\n  // 2 back\n  //context.fillStyle = '#f2fbff';\n  //context.fillRect(0, 0, canvas.width, canvas.height);\n  //context.lineWidth = 1;\n  //context.strokeStyle = '#000000';\n  //context.globalAlpha = 0.15;\n  //context.beginPath();\n  //\n  //for (let i = -x; i < canvas.width; i += canvas.width / 48) {\n  //    context.moveTo(i, 0);\n  //    context.lineTo(i, canvas.height);\n  //}\n  //\n  //for (let j = -y; j < canvas.height; j += canvas.height / 24) {\n  //    context.moveTo(0, j);\n  //    context.lineTo(canvas.width, j);\n  //}\n  //\n  //context.stroke();\n  //context.globalAlpha = 1;\n  //context.closePath();\n  // 3 back\n  //draw back color\n  //context.fillStyle = '#171717';\n  // out of boundaries fill color\n  context.fillStyle = \"white\";\n  context.fillRect(0, 0, canvas.width / 2 - x, canvas.height);\n  context.fillRect(0, 0, canvas.width, canvas.height / 2 - y);\n  context.fillRect(canvas.width / 2 - x + MAP_SIZE, canvas.height / 2 - y, canvas.width / 2 + x - MAP_SIZE, canvas.height / 2 + y);\n  context.fillRect(canvas.width / 2 - x, canvas.height / 2 - y + MAP_SIZE, MAP_SIZE, canvas.height / 2 + y - MAP_SIZE);\n  //\n  const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, Math.min(canvas.width / 2, canvas.height / 2));\n  gradient.addColorStop(0, 'rgba(36,0,0,1)');\n  gradient.addColorStop(0, 'rgba(0,174,203,1)');\n  gradient.addColorStop(1, 'rgba(0,151,203,0.734');\n  context.fillStyle = gradient;\n  context.fillRect(canvas.width / 2 - x, canvas.height / 2 - y, MAP_SIZE, MAP_SIZE);\n  //draw lines\n  context.lineWidth = 1;\n  context.strokeStyle = 'rgba(255, 255, 255, 0.2)';\n  //context.globalAlpha = 1;\n  context.save();\n  context.translate(canvas.width / 2 - x, canvas.height / 2 - y);\n  context.beginPath();\n  for (let i = 0; i < MAP_SIZE; i += MAP_SIZE / 32) {\n    context.moveTo(i, 0);\n    context.lineTo(i, MAP_SIZE);\n  }\n  for (let j = 0; j < MAP_SIZE; j += MAP_SIZE / 32) {\n    context.moveTo(0, j);\n    context.lineTo(MAP_SIZE, j);\n  }\n  context.stroke();\n  //context.globalAlpha = 1;\n  context.closePath();\n  context.restore();\n  //\n}\nfunction renderLeaderboard(usernames) {\n  // Позиция и размеры таблицы\n  const MarignX = 10;\n  const MarignY = 10;\n  const tableWidth = 145;\n  const tableHeight = 260;\n  const x = 75;\n  let y = 23;\n  const rowHeight = 22;\n  //draw frame\n  context.save();\n  context.translate(canvas.width - MarignX - tableWidth, MarignY);\n  context.fillStyle = 'hsla(0, 0%, 0%, 0.5)';\n  context.fillRect(0, 0, tableWidth, tableHeight);\n  // draw Leaderboard text\n  context.fillStyle = 'white';\n  context.textAlign = \"center\";\n  context.font = 'bold 20px Arial, sans-serif';\n  context.fillText(\"Leaderboard\", x, y);\n  //draw username test\n  context.fillStyle = '#F5F5F5';\n  context.font = 'bold 15px Arial, sans-serif';\n  // Отрисовка каждого пользователя в таблице\n  usernames.forEach((username, index) => context.fillText(`${index + 1}. ${username}`, x, y + (index + 1) * rowHeight));\n  context.restore();\n}\n;\nfunction drawUsername(player) {\n  context.save();\n  context.textAlign = \"center\";\n  context.font = 'bold 20px Arial, sans-serif';\n  context.fillStyle = 'white';\n  context.strokeStyle = 'black';\n  context.lineWidth = 0.5;\n  context.fillText(`${player.username}`, player.centroid.x, player.centroid.y - player.radius - 12);\n  context.strokeText(`${player.username}`, player.centroid.x, player.centroid.y - player.radius - 12);\n  context.restore();\n}\nfunction renderMainMenu() {\n  animationFrameRequestId = requestAnimationFrame(renderMainMenu);\n}\nexport function startRendering(canvasRef) {\n  canvas = canvasRef.current;\n  context = canvas.getContext(\"2d\");\n  setCanvasDimensions();\n  window.addEventListener('resize', setCanvasDimensions);\n  cancelAnimationFrame(animationFrameRequestId);\n  animationFrameRequestId = requestAnimationFrame(render);\n}\nexport function stopRendering() {\n  cancelAnimationFrame(animationFrameRequestId);\n  animationFrameRequestId = requestAnimationFrame(renderMainMenu);\n}","map":{"version":3,"names":["getCurrentState","ratio","MAP_SIZE","canvas","context","clientOffX","clientOffY","setCanvasDimensions","scaleRatio","Math","max","window","innerWidth","width","height","innerHeight","animationFrameRequestId","render","me","others","lines","remainders","bots","usernames","renderBackground","centroid","x","y","renderboundaries","renderPlayer","forEach","other","renderPlayers","bot","renderBots","line","renderLine","remainder","rendeRemainder","renderLeaderboard","requestAnimationFrame","canvasX","canvasY","save","translate","beginPath","moveTo","coordinates","i","length","lineTo","closePath","strokeStyle","lineWidth","stroke","fillStyle","color","fill","restore","x1","y1","x2","y2","setClientdir","player","velocity","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","protected","drawUsername","strokeRect","fillRect","gradient","createRadialGradient","min","addColorStop","j","MarignX","MarignY","tableWidth","tableHeight","rowHeight","textAlign","font","fillText","username","index","radius","strokeText","renderMainMenu","startRendering","canvasRef","current","getContext","addEventListener","cancelAnimationFrame","stopRendering"],"sources":["/home/edi/secario.fun/frondend/src/services/render.js"],"sourcesContent":["\nimport { getCurrentState, ratio } from './state.js';\n\nconst MAP_SIZE = 3000;\nlet canvas;\nlet context;\n\nlet clientOffX;\nlet clientOffY;\n\nfunction setCanvasDimensions() {\n    const scaleRatio = Math.max(1, 800 / window.innerWidth);\n    canvas.width = scaleRatio * window.innerWidth;\n    canvas.height = scaleRatio * window.innerHeight;\n}\n\n\n\nlet animationFrameRequestId;\n\nfunction render() {\n    const { me, others, lines, remainders, bots, usernames } = getCurrentState();\n    if (me) {\n        renderBackground(me.centroid.x, me.centroid.y);\n        // Draw boundaries\n        renderboundaries(me)\n        //draw leaderboard\n\n\n        renderPlayer(me);\n        others.forEach(other => renderPlayers(me, other));\n\n        //draw bots \n        bots.forEach(bot => renderBots(me, bot));\n\n        lines.forEach(line => renderLine(me, line));\n\n        remainders.forEach(remainder => rendeRemainder(me, remainder));\n\n        renderLeaderboard(usernames)\n\n    }\n    animationFrameRequestId = requestAnimationFrame(render);\n}\n\nfunction rendeRemainder(me, remainder) {\n    const canvasX = canvas.width / 2 - me.centroid.x\n    const canvasY = canvas.height / 2 - me.centroid.y\n\n    // Draw ship\n    context.save();\n    context.translate(canvasX, canvasY);\n\n    context.beginPath();\n    context.moveTo(remainder.coordinates[0].x, remainder.coordinates[0].y);\n\n    for (let i = 1; i < remainder.coordinates.length; i++) {\n        context.lineTo(remainder.coordinates[i].x, remainder.coordinates[i].y);\n    }\n\n    context.closePath();\n    context.strokeStyle = 'black';\n    context.lineWidth = 4;\n    context.stroke();\n    context.fillStyle = remainder.color;\n    context.fill()\n\n    context.restore();\n\n}\n\nfunction renderLine(me, line) {\n    const canvasX = canvas.width / 2 - me.centroid.x\n    const canvasY = canvas.height / 2 - me.centroid.y\n\n    context.save();\n    context.translate(canvasX, canvasY);\n    //context.rotate(line.angle)\n    context.beginPath();\n    context.moveTo(line.x1, line.y1)\n    context.lineTo(line.x2, line.y2)\n    context.closePath();\n    context.strokeStyle = line.color;\n    context.lineWidth = 2;\n    context.stroke();\n\n    context.restore();\n}\n\nfunction setClientdir(){\n\n}\n\nfunction renderPlayer(player) {\n    const canvasX = canvas.width / 2 - player.centroid.x + 2*player.velocity.x\n    const canvasY = canvas.height / 2 - player.centroid.y + 2*player.velocity.y\n\n    // Draw ship\n    context.save();\n    context.translate(canvasX, canvasY);\n    //context.beginPath();\n    //console.log('player', me.centroid)\n    //context.arc(0, 0, 40, 0, 2 * Math.PI);\n    //context.fillStyle = 'blue';\n    //context.fill();\n    //context.closePath();\n\n    context.beginPath();\n    context.shadowColor = player.color;\n    context.shadowBlur = 15;\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.moveTo(player.coordinates[0].x, player.coordinates[0].y);\n\n    for (let i = 1; i < player.coordinates.length; i++) {\n        context.lineTo(player.coordinates[i].x, player.coordinates[i].y);\n    }\n\n    context.closePath();\n    //\n    if (player.protected) {\n        context.shadowColor = 'hsla(183, 100%, 47%, 1)';\n        context.shadowBlur = 100;\n    }\n    context.strokeStyle = 'black';;\n    context.lineWidth = 4;\n    context.stroke();\n    context.fillStyle = player.color;\n    context.fill()\n\n\n    //for (let i = 0; i < player.coordinates.length; i++) {\n    //    context.font = \"20px serif\";\n    //    context.strokeStyle = 'black';\n    //    context.strokeText(`${i}`\n    //        , player.coordinates[i].x, player.coordinates[i].y);\n    //}\n\n    //context.beginPath();\n    //context.arc(player.centroid.x, player.centroid.y, player.radius, 0, 2 * Math.PI);\n    //context.strokeStyle = 'blue';\n    //context.lineWidth = 2;\n    //context.stroke();\n    //context.closePath();\n\n    context.restore();\n}\n\nfunction renderPlayers(me, player) {\n    const canvasX = canvas.width / 2 - me.centroid.x\n    const canvasY = canvas.height / 2 - me.centroid.y\n\n    // Draw ship\n    context.save();\n    context.translate(canvasX, canvasY);\n\n    context.beginPath();\n    context.shadowColor = player.color;\n    context.shadowBlur = 15;\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.moveTo(player.coordinates[0].x, player.coordinates[0].y);\n    for (let i = 1; i < player.coordinates.length; i++) {\n        context.lineTo(player.coordinates[i].x, player.coordinates[i].y);\n    }\n\n    context.closePath();\n    context.strokeStyle = 'black';\n    context.lineWidth = 4;\n    context.stroke();\n    context.fillStyle = player.color;\n    context.fill()\n\n    //draw username\n    drawUsername(player)\n\n\n    //for (let i = 0; i < player.coordinates.length; i++) {\n    //    context.font = \"20px serif\";\n    //    context.strokeStyle = 'black';\n    //    context.strokeText(`${i}`\n    //        , player.coordinates[i].x, player.coordinates[i].y);\n    //}\n\n\n    //context.beginPath();\n    //context.arc(player.centroid.x, player.centroid.y, player.radius, 0, 2 * Math.PI);\n    //context.strokeStyle = 'blue';\n    //context.lineWidth = 2;\n    //context.stroke();\n    //context.closePath();\n\n    context.restore();\n}\n\nfunction renderBots(me, bot) {\n    const canvasX = canvas.width / 2 - me.centroid.x\n    const canvasY = canvas.height / 2 - me.centroid.y\n\n    // Draw ship\n    context.save();\n    context.translate(canvasX, canvasY);\n\n    context.beginPath();\n    context.shadowColor = bot.color;\n    context.shadowBlur = 15;\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.moveTo(bot.coordinates[0].x, bot.coordinates[0].y);\n    for (let i = 1; i < bot.coordinates.length; i++) {\n        context.lineTo(bot.coordinates[i].x, bot.coordinates[i].y);\n    }\n\n    context.closePath();\n    context.strokeStyle = 'black';\n    context.lineWidth = 4;\n    context.stroke();\n    context.fillStyle = bot.color;\n    context.fill()\n\n    context.restore();\n}\n\n\n//-------------\n\nfunction renderboundaries(me) {\n    context.strokeStyle = 'black';\n    context.lineWidth = 2.50;\n    context.strokeRect(canvas.width / 2 - me.centroid.x, canvas.height / 2 - me.centroid.y, MAP_SIZE, MAP_SIZE);\n}\n\nfunction renderBackground(x, y) {\n    //const backgroundX = MAP_SIZE / 2 - x + canvas.width / 2;\n    //const backgroundY = MAP_SIZE / 2 - y + canvas.height / 2;\n    //const backgroundGradient = context.createRadialGradient(\n    //    backgroundX,\n    //    backgroundY,\n    //    MAP_SIZE / 10,\n    //    backgroundX,\n    //    backgroundY,\n    //    MAP_SIZE / 2,\n    //);\n    //backgroundGradient.addColorStop(0, '#f9f5ff');\n    //backgroundGradient.addColorStop(1, '#cda4de');\n    //context.fillStyle = backgroundGradient;\n    //context.fillRect(0, 0, canvas.width, canvas.height);\n\n    // 2 back\n    //context.fillStyle = '#f2fbff';\n    //context.fillRect(0, 0, canvas.width, canvas.height);\n    //context.lineWidth = 1;\n    //context.strokeStyle = '#000000';\n    //context.globalAlpha = 0.15;\n    //context.beginPath();\n    //\n    //for (let i = -x; i < canvas.width; i += canvas.width / 48) {\n    //    context.moveTo(i, 0);\n    //    context.lineTo(i, canvas.height);\n    //}\n    //\n    //for (let j = -y; j < canvas.height; j += canvas.height / 24) {\n    //    context.moveTo(0, j);\n    //    context.lineTo(canvas.width, j);\n    //}\n    //\n    //context.stroke();\n    //context.globalAlpha = 1;\n    //context.closePath();\n    // 3 back\n    //draw back color\n    //context.fillStyle = '#171717';\n    // out of boundaries fill color\n    context.fillStyle = \"white\";\n    context.fillRect(0, 0, canvas.width / 2 - x, canvas.height);\n    context.fillRect(0, 0, canvas.width, canvas.height / 2 - y);\n    context.fillRect(canvas.width / 2 - x + MAP_SIZE, canvas.height / 2 - y, canvas.width / 2 + x - MAP_SIZE, canvas.height / 2 + y);\n    context.fillRect(canvas.width / 2 - x, canvas.height / 2 - y + MAP_SIZE, MAP_SIZE, canvas.height / 2 + y - MAP_SIZE);\n    //\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, Math.min(canvas.width / 2, canvas.height / 2));\n\n    gradient.addColorStop(0, 'rgba(36,0,0,1)');\n    gradient.addColorStop(0, 'rgba(0,174,203,1)');\n    gradient.addColorStop(1, 'rgba(0,151,203,0.734');\n\n    context.fillStyle = gradient;\n    context.fillRect(canvas.width / 2 - x, canvas.height / 2 - y, MAP_SIZE, MAP_SIZE);\n    //draw lines\n    context.lineWidth = 1;\n    context.strokeStyle = 'rgba(255, 255, 255, 0.2)';\n    //context.globalAlpha = 1;\n    context.save();\n    context.translate(canvas.width / 2 - x, canvas.height / 2 - y);\n    context.beginPath();\n    for (let i = 0; i < MAP_SIZE; i += MAP_SIZE / 32) {\n        context.moveTo(i, 0);\n        context.lineTo(i, MAP_SIZE);\n    }\n\n    for (let j = 0; j < MAP_SIZE; j += MAP_SIZE / 32) {\n        context.moveTo(0, j);\n        context.lineTo(MAP_SIZE, j);\n    }\n\n    context.stroke();\n    //context.globalAlpha = 1;\n    context.closePath();\n    context.restore();\n    //\n\n}\n\nfunction renderLeaderboard(usernames) {\n    // Позиция и размеры таблицы\n    const MarignX = 10;\n    const MarignY = 10;\n    const tableWidth = 145;\n    const tableHeight = 260;\n    const x = 75;\n    let y = 23;\n    const rowHeight = 22;\n    //draw frame\n    context.save();\n    context.translate(canvas.width - MarignX - tableWidth, MarignY);\n    context.fillStyle = 'hsla(0, 0%, 0%, 0.5)';\n    context.fillRect(0, 0, tableWidth, tableHeight);\n    // draw Leaderboard text\n    context.fillStyle = 'white';\n    context.textAlign = \"center\";\n    context.font = 'bold 20px Arial, sans-serif';\n    context.fillText(\"Leaderboard\", x, y);\n    //draw username test\n    context.fillStyle = '#F5F5F5'\n    context.font = 'bold 15px Arial, sans-serif';\n    // Отрисовка каждого пользователя в таблице\n    usernames.forEach((username, index) => context.fillText(`${index + 1}. ${username}`, x, y + (index + 1) * rowHeight));\n\n    context.restore();\n};\n\nfunction drawUsername(player) {\n    context.save();\n    context.textAlign = \"center\";\n    context.font = 'bold 20px Arial, sans-serif';\n    context.fillStyle = 'white';\n    context.strokeStyle = 'black';\n    context.lineWidth = 0.5\n    context.fillText(`${player.username}`, player.centroid.x, player.centroid.y - player.radius - 12);\n    context.strokeText(`${player.username}`, player.centroid.x, player.centroid.y - player.radius - 12);\n    context.restore();\n\n}\n\nfunction renderMainMenu() {\n    animationFrameRequestId = requestAnimationFrame(renderMainMenu);\n}\n\nexport function startRendering(canvasRef) {\n    canvas = canvasRef.current;\n    context = canvas.getContext(\"2d\");\n    setCanvasDimensions()\n    window.addEventListener('resize', setCanvasDimensions);\n\n    cancelAnimationFrame(animationFrameRequestId);\n    animationFrameRequestId = requestAnimationFrame(render);\n}\n\n\nexport function stopRendering() {\n    cancelAnimationFrame(animationFrameRequestId);\n    animationFrameRequestId = requestAnimationFrame(renderMainMenu);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}